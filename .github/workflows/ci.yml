# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on: [push, pull_request]
jobs:
  pm_coding_template:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Use cache if possible
        # see [cache](https://github.com/actions/cache) and [pip example](https://github.com/actions/cache/blob/master/examples.md#simple-example))
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
#      - name: Configure AWS Credentials
#        # see https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.aws_service_acct_access_key_id }}
#          aws-secret-access-key: ${{ secrets.aws_service_acct_secret_access_key }}
#          aws-region: us-west-2
      - name: Install dependencies
        run: |
          pip install --upgrade wheel pip
          pip install -r projectname/requirements.txt
#      - name: Test with pytest --cov
#        run: |
#          pytest --cov-report=xml:coverage.projectname.xml --cov-report=term --cov=projectname projectname
      - name: Typecheck code and tests with mypy
        run: |
          mypy --config-file mypy.ini --pretty projectname
      - name: Lint with flake8
        run: |
          flake8 projectname --exclude=.ipynb_checkpoints --count --ignore=F405,W503 --select=E9,F63,F7,F82 --show-source --statistics
          # stop the build if there are Python syntax errors or undefined names
          # star imports are ok with us in some cases: https://www.flake8rules.com/rules/F405.html
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 projectname --exclude=.ipynb_checkpoints --count --ignore=F405,W503 --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test 'black' formatting conformance
        env:
          PYTHONPATH: .
        run: |
          black --check --diff projectname
#      - name: Upload codecov report
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#        run: |
#          bash <(curl -s https://codecov.io/bash) -f coverage.projectname.xml -F projectname
